//noinspection GradleDependency
// WARNING WARNING WARNING
// don't add any additional things here without first search "China" in this file

buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.31.2'
    }
}

// WARNING WARNING WARNING
// DON'T add any plugins that is Google Play Service or uses Google Play Service
// Search China in this file for the reason
apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'

repositories {
    maven {
        url 'https://maven.google.com'
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    sourceSets {
        main {

        }
    }
    defaultConfig {
        versionCode 158
        versionName "3.33"

        applicationId "io.stormbird.wallet"
        minSdkVersion 23
        targetSdkVersion 30
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        def XInfuraAPI = "XInfuraAPI"
        //Put your Infura key here, NB with over 30 - 40 users this API key will rate limit, it's only here for bootstrapping a free build
        def DEFAULT_INFURA_API_KEY = "\"da3717f25f824cc1baa32d812386d93f\"";

        buildConfigField 'int', 'DB_VERSION', '24'
        buildConfigField "String", XInfuraAPI, DEFAULT_INFURA_API_KEY

        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }
    flavorDimensions "targetting"

    productFlavors {
        analytics {
            dimension "targetting"
        }
        noAnalytics {
            dimension "targetting"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'),
//                    'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    /*
    Below code is used to include analytics only when Flavor is "No Analytics"
    This is due to China release where Google services should not be included
     */
    def task = gradle.startParameter.taskNames[0] ?: ""

    afterEvaluate { project ->
        if (!task.toLowerCase().contains("noanalytics"))
        {
            apply plugin: 'com.google.gms.google-services'
            apply plugin: 'com.google.firebase.crashlytics'
            dependencies {
                implementation 'com.google.firebase:firebase-analytics:19.0.0'
                implementation 'com.mixpanel.android:mixpanel-android:5.8.4'
            }
        }
    }

}

dependencies {
    implementation project(":lib")

    // WARNING! WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  
    // WARNING!  Don't add depdency on Google Play Services without consulting
    // WARNING!  The China marketing team
    // WARNING!  Many Chinese Android phones execute (meaning terminate) any app that
    // WARNING!  users google gms summarily, like immune systems cleansing infections
    // WARNING! WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!

    // Ethereum client
    implementation "org.web3j:core:4.6.0-android"

    // Http client
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    // Bar code scanning
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.2'

    // Sugar
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation 'com.romandanylyk:pageindicatorview:1.0.0'

    //coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.5'

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Keyboard visibility
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC2'

    // Dagger 2

    // Dagger core
    implementation "com.google.dagger:dagger:2.27"
    annotationProcessor "com.google.dagger:dagger-compiler:2.22"

    // Dagger Android
    implementation "com.google.dagger:dagger-android-support:2.22"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.22"

    // if you are not using support library, include this instead
    implementation "com.google.dagger:dagger-android:2.22"

    // Image Loader
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-android'

    // Tests
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4-rule-agent', version: '1.7.4'
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.2'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.2'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestImplementation('tools.fastlane:screengrab:1.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.google.firebase:firebase-crashlytics:18.0.1'

    implementation group: 'com.trustwallet', name: 'wallet-core', version: '2.6.3'

    implementation 'com.github.florent37:tutoshowcase:1.0.1'

    // Do not upgrade unless we have migrated to AndroidX
    implementation 'com.google.android:flexbox:2.0.1'

    // PW
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
}

// WARNING WARNING WARNING
// don't add any additional things here without first search "China" in this file

