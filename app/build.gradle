//noinspection GradleDependency
// WARNING WARNING WARNING
// don't add any additional things here without first search "China" in this file

buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.28.1'
    }
}

// WARNING WARNING WARNING
// DON'T add any plugins that is Google Play Service or uses Google Play Service
// Search China in this file for the reason
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
//apply plugin: 'com.google.gms.google-services' //include when flavour refactor is done
apply plugin: 'kotlin-android'

repositories {
    maven {
        url 'https://maven.google.com'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    sourceSets {
        main {

        }
    }
    defaultConfig {
        applicationId "io.stormbird.wallet"
        minSdkVersion 23
        targetSdkVersion 29
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        def XInfuraAPI = "XInfuraAPI"
        //Put your Infura key here
        def DEFAULT_INFURA_API_KEY = "\"da3717f25f824cc1baa32d812386d93f\"";

        buildConfigField 'int', 'DB_VERSION', '12'
        buildConfigField "String", XInfuraAPI, DEFAULT_INFURA_API_KEY
        buildConfigField "boolean", "USE_ANALYTICS", "true"

        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }
    flavorDimensions "targetting"
    productFlavors {
	awallet {
		dimension "targetting"
        versionCode 123
        versionName "3.11.0-beta"
	}
    }
    buildTypes {
        debug {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'),
//                    'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

project.ext {
    retrofitVersion = "2.5.0"
    okhttpVersion = "4.0.0"
    picassoVersion = "2.71828"
    supportVersion = "28.0.0"
    gsonVersion = "2.8.6"
    rxJavaVersion = "2.2.10"
    rxAndroidVersion = "2.1.1"
    daggerVersion = "2.22"
}

dependencies {
    implementation project(":lib")

    // WARNING! WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  
    // WARNING!  Don't add depdency on Google Play Services without consulting
    // WARNING!  The China marketing team
    // WARNING!  Many Chinese Android phones execute (meaning terminate) any app that
    // WARNING!  users google gms summarily, like immune systems cleansing infections
    // WARNING! WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!  WARNING!

    // Ethereum client
    implementation "org.web3j:core:4.6.0-android"

    // Http client
    implementation "com.squareup.retrofit2:retrofit:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$project.okhttpVersion"
    implementation "com.google.code.gson:gson:$project.gsonVersion"
    implementation "com.squareup.picasso:picasso:$project.picassoVersion"
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$project.supportVersion"
    implementation "com.android.support:design:$project.supportVersion"
    implementation "com.android.support:support-vector-drawable:$project.supportVersion"
    implementation "com.android.support:recyclerview-v7:$project.supportVersion"
    implementation "com.android.support:gridlayout-v7:$project.supportVersion"

    // Bar code scanning
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.2'

    // Sugar
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation 'com.romandanylyk:pageindicatorview:1.0.0'

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    // Keyboard visibility
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC2'

    // Dagger 2

    // Dagger core
    implementation "com.google.dagger:dagger:$project.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$project.daggerVersion"

    // Dagger Android
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"

    // if you are not using support library, include this instead
    implementation "com.google.dagger:dagger-android:$project.daggerVersion"

    // Image Loader
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestImplementation('tools.fastlane:screengrab:1.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'com.trustwallet.walletcore:walletcore:0.12.8'

    implementation 'com.github.florent37:tutoshowcase:1.0.1'

    // Do not upgrade unless we have migrated to AndroidX
    implementation 'com.google.android:flexbox:1.0.0'

    // PW
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //implementation 'com.google.firebase:firebase-analytics:16.5.0'  //include when flavour refactor is done
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
}

// WARNING WARNING WARNING
// don't add any additional things here without first search "China" in this file

